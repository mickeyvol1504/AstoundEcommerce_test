* {
  box-sizing: border-box;
}

html, body, div, span, h1, h2, h3, h4, h5, h6, p, em, img, strong, sub, sup, b, u, i, dl, dt, dd, ol, ul, li, fieldset, form, label, table, tbody, tfoot, thead, tr, th, td {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  vertical-align: baseline;
  background: transparent;
  list-style: none;
}

a {
  margin: 0;
  padding: 0;
  vertical-align: baseline;
  background: transparent;
  text-decoration: none;
  color: white;
}

input {
  outline: none;
}

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Remove margin
 */
figure {
  margin: 0;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

fieldset {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* Blockquote
   ========================================================================== */
blockquote {
  margin: 0;
}

/* Your custom fonts here */
/* Example

@font-face {
    font-family: 'CustomFont';
    src: url('../fonts/Custom-Font.eot');
    src: url('../fonts/Custom-Font.eot?#iefix') format('embedded-opentype'),
         url('../fonts/Custom-Font.woff') format('woff'),
         url('../fonts/Custom-Font.svg#custom_font') format('svg');
    font-weight: 400;       // For normal width. It could has another value   
    font-style: normal;     // Also could has another value
    }


// Var for using custom font
$CustomFont: 'CustomFont', Helvetica, Arial, sans-serif;
*/
html, body {
  height: 100%;
}

.cf:before, .cf:after {
  display: table;
  content: "";
}

.cf:after {
  clear: both;
}

.container {
  margin: 0 auto;
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .container {
    width: 640px;
  }
}

@media only screen and (min-width: 835px) {
  .container {
    width: 835px;
  }
}

.main {
  padding-top: 30px;
}

@media only screen and (min-width: 640px) {
  .main {
    padding-top: 20px;
  }
}

@media only screen and (max-width: 639px) {
  .main .product {
    margin: 0 auto;
  }
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .main .product {
    float: left;
    margin-right: 40px;
  }
  .main .product:nth-child(2n) {
    margin-right: 0;
  }
}

@media only screen and (min-width: 835px) {
  .main .product {
    float: left;
    margin-right: 20px;
  }
  .main .product:nth-child(3n) {
    margin-right: 0;
  }
}

.banner {
  height: 175px;
  background-size: cover;
  background-position: center;
  position: relative;
}

.banner:before {
  display: block;
  content: '';
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.3);
  position: absolute;
  top: 0;
  left: 0;
}

@media only screen and (min-width: 640px) {
  .banner {
    display: none;
  }
}

.banner__title {
  font-family: Tahoma, sans-serif;
  font-size: 84px;
  line-height: 84px;
  font-weight: 700;
  letter-spacing: 5px;
  text-transform: uppercase;
  color: #fff;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.popup-wrapper {
  display: none;
  width: 100%;
  height: 100%;
  overflow-y: auto;
  position: fixed;
  top: 0;
  z-index: 100;
}

.popup-overlay {
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
}

.popup {
  width: 100%;
  background-color: #fff;
  position: absolute;
  top: 0;
  padding: 55px 35px 45px;
  visibility: hidden;
  opacity: 0;
  -webkit-transition: opacity 0.2s, visibility 0.2s;
  transition: opacity 0.2s, visibility 0.2s;
}

@media only screen and (min-width: 640px) {
  .popup {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup {
    width: 640px;
    padding: 30px;
    left: 50%;
    -webkit-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
            transform: translateX(-50%);
  }
}

@media only screen and (min-width: 835px) {
  .popup {
    width: 835px;
    min-height: 460px;
    padding: 20px 65px 20px 460px;
    left: 50%;
    margin-left: -417.5px;
  }
}

.popup_open {
  visibility: visible;
  opacity: 1;
}

.popup__close {
  width: 45px;
  height: 45px;
  position: absolute;
  top: 5px;
  right: 35px;
  cursor: pointer;
}

@media only screen and (min-width: 640px) {
  .popup__close {
    width: 40px;
    height: 40px;
    border: 2px solid #7eb6e1;
    border-radius: 50%;
    top: 15px;
    right: 15px;
  }
}

.popup__close:before, .popup__close:after {
  display: inline-block;
  content: '';
  height: 0;
  width: 35px;
  border-bottom: 5px solid #7eb6e1;
  position: absolute;
  top: 20px;
  right: 5px;
  -webkit-transform-origin: center;
      -ms-transform-origin: center;
          transform-origin: center;
  -webkit-transition: -webkit-transform 0.3s;
  transition: -webkit-transform 0.3s;
  transition: transform 0.3s;
  transition: transform 0.3s, -webkit-transform 0.3s;
}

@media only screen and (min-width: 640px) {
  .popup__close:before, .popup__close:after {
    width: 24px;
    border-bottom: 2px solid #7eb6e1;
    top: 17px;
    right: 6px;
  }
}

.popup__close:before {
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg);
}

.popup__close:after {
  -webkit-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

.popup__title {
  font-family: "Oswald", sans-serif;
  font-weight: 700;
  font-size: 20px;
  color: #2c303d;
  text-transform: uppercase;
  margin-bottom: 20px;
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__title {
    padding-right: 35px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

.popup__number {
  font-family: "Open Sans", sans-serif;
  font-size: 12px;
  line-height: 20px;
  color: #ababab;
  margin-bottom: 15px;
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__number {
    padding-left: 420px;
    margin-bottom: 35px;
  }
}

.popup__number span {
  display: inline-block;
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__number span {
    margin-bottom: 5px;
  }
}

.popup__number .rate {
  float: right;
}

@media only screen and (min-width: 835px) {
  .popup__number .rate {
    display: none;
  }
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__number .rate {
    float: none;
  }
}

.popup__img {
  width: calc(100% + 70px);
  height: 420px;
  -webkit-transform: translateX(-35px);
      -ms-transform: translateX(-35px);
          transform: translateX(-35px);
  background-size: cover;
  background-position: center;
  position: relative;
  margin-bottom: 20px;
}

@media only screen and (min-width: 640px) {
  .popup__img {
    width: 400px;
    -webkit-transform: translateX(0px);
        -ms-transform: translateX(0px);
            transform: translateX(0px);
    position: absolute;
  }
}

@media only screen and (min-width: 835px) {
  .popup__img {
    top: 20px;
    left: 25px;
  }
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__img {
    top: 80px;
    left: 30px;
  }
}

.popup__desc {
  font-family: "Open Sans", sans-serif;
  font-size: 12px;
  color: #2c303d;
  margin-bottom: 40px;
}

@media only screen and (min-width: 835px) {
  .popup__desc {
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1;
  }
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__desc {
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1;
    margin-bottom: 0;
  }
}

.popup__social {
  width: 260px;
  margin: 0 auto 30px;
}

@media only screen and (min-width: 640px) {
  .popup__social {
    position: absolute;
  }
}

@media only screen and (min-width: 835px) {
  .popup__social {
    width: 40px;
    top: 35px;
    left: 40px;
  }
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__social {
    width: 40px;
    top: 95px;
    left: 45px;
  }
}

.popup__social-hint {
  display: none;
  width: 40px;
  height: 40px;
  position: relative;
  cursor: pointer;
}

.popup__social-hint:before, .popup__social-hint:after {
  display: inline-block;
  content: '';
  height: 0;
  -webkit-transform-origin: center;
      -ms-transform-origin: center;
          transform-origin: center;
  -webkit-transition: -webkit-transform 0.3s;
  transition: -webkit-transform 0.3s;
  transition: transform 0.3s;
  transition: transform 0.3s, -webkit-transform 0.3s;
  width: 24px;
  border-bottom: 2px solid #7eb6e1;
  position: absolute;
  top: 18px;
  right: 7px;
}

.popup__social-hint:before {
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
}

.popup__social-hint:after {
  -webkit-transform: rotate(90deg);
      -ms-transform: rotate(90deg);
          transform: rotate(90deg);
}

.popup__social-hint_open:before {
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg);
}

.popup__social-hint_open:after {
  -webkit-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

@media only screen and (min-width: 835px) {
  .popup__social-hint {
    display: inline-block;
  }
}

@media only screen and (min-width: 835px) {
  .popup__social-tooltip {
    display: none;
  }
}

.popup__social-item {
  width: 40px;
  height: 40px;
  border: 2px solid #7eb6e1;
  border-radius: 50%;
  -webkit-transition: background-color 0.3s;
  transition: background-color 0.3s;
}

@media only screen and (min-width: 640px) {
  .popup__social-item {
    margin-bottom: 15px;
  }
}

@media only screen and (max-width: 639px) {
  .popup__social-item {
    float: left;
    margin-right: 15px;
  }
  .popup__social-item:last-child {
    margin-right: 0;
  }
}

.popup__social-item a {
  display: block;
  height: 100%;
  text-align: center;
}

.popup__social-item svg {
  width: 14px;
  height: 14px;
  fill: #7eb6e1;
  margin-top: 12px;
  -webkit-transition: fill 0.3s;
  transition: fill 0.3s;
}

.popup__price {
  font-family: "Open Sans", sans-serif;
  font-weight: 700;
  font-size: 22px;
  line-height: 22px;
  text-align: center;
  margin-bottom: 40px;
}

@media only screen and (min-width: 640px) {
  .popup__price {
    text-align: left;
  }
}

@media only screen and (min-width: 835px) {
  .popup__price {
    margin-bottom: 25px;
  }
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__price {
    font-size: 26px;
    padding-left: 420px;
  }
}

.popup__price-old {
  color: #2c303d;
  margin-right: 20px;
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__price-old {
    display: block;
    margin-right: 0;
    margin-bottom: 10px;
  }
}

.popup__price-old_sale {
  text-decoration: line-through;
}

.popup__price-new {
  color: #ce2c52;
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__price-new {
    display: block;
  }
}

.popup__size-title {
  font-family: "Open Sans", sans-serif;
  font-weight: 700;
  font-size: 14px;
  text-transform: uppercase;
  text-align: center;
  margin-bottom: 15px;
}

@media only screen and (min-width: 835px) {
  .popup__size-title {
    display: inline-block;
    margin-bottom: 30px;
    margin-right: 15px;
    line-height: 40px;
    vertical-align: top;
  }
  .popup__size-title span:first-child {
    display: none;
  }
}

@media only screen and (min-width: 835px) {
  .popup__size-choose {
    display: inline-block;
  }
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__size-choose {
    width: 100%;
    margin-bottom: 10px;
  }
}

@media only screen and (max-width: 639px) {
  .popup__size-choose {
    width: 250px;
    margin: 0 auto 30px;
  }
}

.popup__size-item {
  float: left;
}

@media only screen and (min-width: 835px) {
  .popup__size-item {
    margin-right: 15px;
  }
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__size-item {
    margin-right: 15px;
    margin-bottom: 15px;
  }
  .popup__size-item:nth-child(3) {
    margin-right: 0;
  }
}

@media only screen and (max-width: 639px) {
  .popup__size-item {
    margin-right: 30px;
  }
  .popup__size-item:last-child {
    margin-right: 0;
  }
}

.popup__size-item input {
  display: none;
}

.popup__size-item label {
  display: block;
  width: 40px;
  height: 40px;
  background-color: #fff;
  border: 1px solid #2c303d;
  border-radius: 50%;
  font-family: "Oswald", sans-serif;
  font-weight: 700;
  font-size: 14px;
  line-height: 40px;
  color: #2c303d;
  text-transform: uppercase;
  text-align: center;
  cursor: pointer;
  -webkit-transition: color 0.3s, background-color 0.3s;
  transition: color 0.3s, background-color 0.3s;
}

.popup__size-item input:checked + label {
  background-color: #2c303d;
  color: #fff;
}

@media only screen and (min-width: 835px) {
  .popup__form {
    -webkit-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2;
  }
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__form {
    padding-left: 420px;
    margin-bottom: 65px;
  }
}

.popup__submit {
  text-align: center;
}

.popup__submit input {
  display: inline-block;
  padding: 0 40px;
  height: 40px;
  line-height: 40px;
  border: 2px solid #8ae6cf;
  background-color: #8ae6cf;
  border-radius: 20px;
  font-family: "Oswald", sans-serif;
  font-weight: 700;
  font-size: 16px;
  letter-spacing: 1.5px;
  color: #2c303d;
  text-align: center;
  text-transform: uppercase;
  -webkit-transition: background-color 0.3s;
  transition: background-color 0.3s;
}

@media only screen and (min-width: 835px) {
  .popup__submit input {
    font-size: 14px;
    letter-spacing: 2px;
    padding: 0 50px;
  }
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .popup__submit input {
    padding: 0 10px;
  }
}

.popup__rate .rate {
  display: none;
}

@media only screen and (min-width: 835px) {
  .popup__rate .rate {
    display: block;
    margin-bottom: 25px;
  }
}

.no-touchevents .popup__social-item:hover {
  background-color: #7eb6e1;
}

.no-touchevents .popup__social-item:hover svg {
  fill: #fff;
}

.no-touchevents .popup__size-item:hover label {
  color: #fff;
  background-color: #2c303d;
}

.no-touchevents .popup__submit input:hover {
  background-color: #fff;
}

.no-touchevents .popup__close:hover:before, .no-touchevents .popup__close:hover:after {
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
}

.product {
  width: 285px;
  position: relative;
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .product {
    width: 300px;
  }
}

@media only screen and (min-width: 835px) {
  .product {
    width: 265px;
  }
}

.product__img {
  height: 265px;
  background-size: cover;
  background-position: center;
  position: relative;
  cursor: pointer;
}

@media only screen and (min-width: 640px) and (max-width: 834px) {
  .product__img {
    height: 284px;
  }
}

.product__more {
  display: inline-block;
  width: 100%;
  padding: 15px 0;
  font-family: "Open Sans", sans-serif;
  font-weight: 700;
  font-size: 18px;
  line-height: 30px;
  text-align: center;
  text-transform: uppercase;
  background-color: rgba(0, 0, 0, 0.5);
  color: #8ae6cf;
  position: absolute;
  bottom: 0;
  left: 0;
}

@media only screen and (min-width: 835px) {
  .product__more {
    width: 144px;
    height: 30px;
    padding: 0;
    visibility: hidden;
    opacity: 0;
    background-color: #8ae6cf;
    color: #2c303d;
    top: 50%;
    left: 50%;
    margin: -15px 0 0 -72px;
    -webkit-transform: translateY(10px);
        -ms-transform: translateY(10px);
            transform: translateY(10px);
    -webkit-transition: 0.4s;
    transition: 0.4s;
  }
}

@media only screen and (min-width: 835px) {
  .product__more-before {
    display: none;
  }
}

.product__price {
  display: block;
  font-family: "Open Sans", sans-serif;
  font-weight: 700;
  font-size: 22px;
  line-height: 22px;
  text-align: center;
  margin-bottom: 30px;
}

@media only screen and (min-width: 835px) {
  .product__price {
    display: inline-block;
    font-size: 16px;
    margin-bottom: 0;
    background-color: #8ae6cf;
    position: absolute;
    top: 225px;
    right: 0;
  }
}

.product__price-old {
  padding: 0 10px;
  color: #2c303d;
}

@media only screen and (min-width: 835px) {
  .product__price-old_sale {
    text-decoration: line-through;
  }
}

@media only screen and (max-width: 835px) {
  .product__price-old_sale {
    display: none;
  }
}

.product__price-new {
  padding: 0 10px;
  color: #ce2c52;
}

.product__desc {
  padding: 10px;
  font-family: "Oswald", sans-serif;
  font-weight: 700;
  font-size: 20px;
  color: #2c303d;
  text-align: center;
  text-transform: uppercase;
}

@media only screen and (min-width: 835px) {
  .product__desc {
    font-size: 12px;
    line-height: 18px;
    padding: 15px 10px;
  }
}

@media only screen and (min-width: 835px) {
  .no-touchevents .product__img:hover .product__more {
    visibility: visible;
    opacity: 1;
    -webkit-transform: translateY(0);
        -ms-transform: translateY(0);
            transform: translateY(0);
  }
}

.rate__item {
  display: inline-block;
  fill: #ababab;
}

.rate .active {
  fill: #ce2c52;
}

.rate svg {
  width: 16px;
  height: 16px;
}

/*# sourceMappingURL=data:application/json;base64, */
